[2023-03-05 16:02:40,362] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-05 16:02:40,366] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-05 16:02:40,366] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-05 16:02:40,366] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-05 16:07:40,371] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-05 16:07:40,371] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-05 16:07:40,371] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-05 16:07:40,371] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-05 16:12:40,374] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-05 16:12:40,375] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-05 16:12:40,376] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-05 16:12:40,376] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-05 16:17:40,381] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-05 16:17:40,382] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-05 16:17:40,382] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-05 16:17:40,382] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-05 16:22:40,387] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-05 16:22:40,388] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-05 16:22:40,389] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-05 16:22:40,389] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-05 16:27:40,392] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-05 16:27:40,393] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-05 16:27:40,393] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-05 16:27:40,393] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-05 16:28:52,922] DEBUG [Controller id=0] Delete topics listener fired for topics input-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:28:52,923] INFO [Controller id=0] Starting topic deletion for topics input-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:28:52,923] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:28:52,923] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:28:52,926] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-03-05 16:28:53,033] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(input-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:28:53,033] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=input-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:28:53,034] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:28:53,177] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:28:53,178] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:28:53,198] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:28:53,240] INFO [Controller id=0] New topics: [Set(input-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(input-vehicle-info,Some(Ai26hQ8ATjeqY2tHADLtQQ),Map(input-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:28:53,240] INFO [Controller id=0] New partition creation callback for input-vehicle-info-0 (kafka.controller.KafkaController)
[2023-03-05 16:29:01,741] DEBUG [Controller id=0] Delete topics listener fired for topics output-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:29:01,742] INFO [Controller id=0] Starting topic deletion for topics output-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:29:01,742] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:29:01,742] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:29:01,852] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(output-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:29:01,852] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:29:01,852] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:29:01,985] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:29:01,986] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:29:01,987] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:29:14,226] INFO [Controller id=0] New topics: [Set(output-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-vehicle-info,Some(1Fuqwka1Qai7iyF2jOokZA),Map(output-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:29:14,226] INFO [Controller id=0] New partition creation callback for output-vehicle-info-0 (kafka.controller.KafkaController)
[2023-03-05 16:32:40,397] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-05 16:32:40,398] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-05 16:32:40,399] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-05 16:32:40,399] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-05 16:34:06,695] DEBUG [Controller id=0] Delete topics listener fired for topics output-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:34:06,695] INFO [Controller id=0] Starting topic deletion for topics output-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:34:06,695] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:34:06,695] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:34:06,809] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(output-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:34:06,810] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:34:06,810] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:34:06,942] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:34:06,943] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:34:06,944] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:34:11,642] DEBUG [Controller id=0] Delete topics listener fired for topics input-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:34:11,642] INFO [Controller id=0] Starting topic deletion for topics input-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:34:11,642] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:34:11,643] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:34:11,752] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(input-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:34:11,752] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=input-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:34:11,753] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:34:11,878] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:34:11,879] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:34:11,879] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:34:22,258] INFO [Controller id=0] New topics: [Set(output-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-vehicle-info,Some(FpemB3q0QSOsJbhYnSFXiQ),Map(output-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:34:22,258] INFO [Controller id=0] New partition creation callback for output-vehicle-info-0 (kafka.controller.KafkaController)
[2023-03-05 16:34:22,484] INFO [Controller id=0] New topics: [Set(input-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(input-vehicle-info,Some(1AkPmY_iQcSJN-lv7-CNUQ),Map(input-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:34:22,484] INFO [Controller id=0] New partition creation callback for input-vehicle-info-0 (kafka.controller.KafkaController)
[2023-03-05 16:35:38,448] DEBUG [Controller id=0] Delete topics listener fired for topics input-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:35:38,449] INFO [Controller id=0] Starting topic deletion for topics input-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:35:38,449] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:38,449] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:38,543] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(input-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:35:38,543] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=input-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:38,543] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:38,671] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:38,672] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:35:38,673] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:35:38,756] INFO [Controller id=0] New topics: [Set(input-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(input-vehicle-info,Some(oCAldT5bQrGfGWp9NbkzMg),Map(input-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:35:38,756] INFO [Controller id=0] New partition creation callback for input-vehicle-info-0 (kafka.controller.KafkaController)
[2023-03-05 16:35:43,594] DEBUG [Controller id=0] Delete topics listener fired for topics input-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:35:43,594] INFO [Controller id=0] Starting topic deletion for topics input-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:35:43,594] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:43,595] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:43,705] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(input-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:35:43,705] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=input-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:43,706] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:43,834] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:43,835] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:35:43,836] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:35:43,900] INFO [Controller id=0] New topics: [Set(input-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(input-vehicle-info,Some(uVkL-A6pR1yBccIsmneo9g),Map(input-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:35:43,901] INFO [Controller id=0] New partition creation callback for input-vehicle-info-0 (kafka.controller.KafkaController)
[2023-03-05 16:35:48,990] DEBUG [Controller id=0] Delete topics listener fired for topics output-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:35:48,991] INFO [Controller id=0] Starting topic deletion for topics output-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:35:48,991] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:48,991] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:49,101] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(output-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:35:49,101] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:49,102] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:49,228] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:35:49,229] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:35:49,229] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:35:49,290] INFO [Controller id=0] New topics: [Set(output-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-vehicle-info,Some(CmabrIb9Q1Cq_6rIS14-hQ),Map(output-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:35:49,291] INFO [Controller id=0] New partition creation callback for output-vehicle-info-0 (kafka.controller.KafkaController)
[2023-03-05 16:37:40,402] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-05 16:37:40,403] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-05 16:37:40,404] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-05 16:37:40,404] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-05 16:40:58,309] DEBUG [Controller id=0] Delete topics listener fired for topics output-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:40:58,309] INFO [Controller id=0] Starting topic deletion for topics output-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:40:58,309] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:40:58,309] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:40:58,402] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(output-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:40:58,402] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:40:58,402] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:40:58,533] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:40:58,534] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:40:58,534] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:40:58,597] INFO [Controller id=0] New topics: [Set(output-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-vehicle-info,Some(xtNPjvEkTj-KUZDMx9vi9g),Map(output-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:40:58,598] INFO [Controller id=0] New partition creation callback for output-vehicle-info-0 (kafka.controller.KafkaController)
[2023-03-05 16:41:03,019] DEBUG [Controller id=0] Delete topics listener fired for topics input-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:41:03,019] INFO [Controller id=0] Starting topic deletion for topics input-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:41:03,020] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:41:03,020] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:41:03,128] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(input-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:41:03,129] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=input-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:41:03,129] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:41:03,259] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:41:03,260] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:41:03,260] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:41:03,324] INFO [Controller id=0] New topics: [Set(input-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(input-vehicle-info,Some(kTybZSXwQ-yzsMnFr4I5Xg),Map(input-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:41:03,324] INFO [Controller id=0] New partition creation callback for input-vehicle-info-0 (kafka.controller.KafkaController)
[2023-03-05 16:42:40,405] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-05 16:42:40,406] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-05 16:42:40,406] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-05 16:42:40,406] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-05 16:47:08,156] DEBUG [Controller id=0] Delete topics listener fired for topics input-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:47:08,156] INFO [Controller id=0] Starting topic deletion for topics input-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:47:08,156] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:47:08,157] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:47:08,268] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(input-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:47:08,269] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=input-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:47:08,269] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:47:08,397] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:47:08,398] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:47:08,399] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:47:08,461] INFO [Controller id=0] New topics: [Set(input-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(input-vehicle-info,Some(vNA8IyKISYWY4VDtqZyHlQ),Map(input-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:47:08,461] INFO [Controller id=0] New partition creation callback for input-vehicle-info-0 (kafka.controller.KafkaController)
[2023-03-05 16:47:12,058] DEBUG [Controller id=0] Delete topics listener fired for topics output-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:47:12,058] INFO [Controller id=0] Starting topic deletion for topics output-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:47:12,058] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:47:12,058] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:47:12,169] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(output-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:47:12,170] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:47:12,170] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:47:12,300] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:47:12,300] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:47:12,301] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:47:12,364] INFO [Controller id=0] New topics: [Set(output-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-vehicle-info,Some(O6jjYuKhQYyzBZSSeN4Xuw),Map(output-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:47:12,365] INFO [Controller id=0] New partition creation callback for output-vehicle-info-0 (kafka.controller.KafkaController)
[2023-03-05 16:47:40,408] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-05 16:47:40,408] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-05 16:47:40,409] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-05 16:47:40,409] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-05 16:52:40,412] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-05 16:52:40,413] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-05 16:52:40,413] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-05 16:52:40,413] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-05 16:57:40,417] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-05 16:57:40,418] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-05 16:57:40,419] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-05 16:57:40,419] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-05 16:58:16,896] DEBUG [Controller id=0] Delete topics listener fired for topics output-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:58:16,896] INFO [Controller id=0] Starting topic deletion for topics output-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:58:16,896] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:58:16,896] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:58:16,898] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-03-05 16:58:17,007] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(output-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:58:17,007] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:58:17,008] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:58:17,138] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:58:17,140] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:58:17,141] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:58:17,205] INFO [Controller id=0] New topics: [Set(output-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-vehicle-info,Some(hwhsxiR2SlGj498Ec_W_yA),Map(output-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:58:17,205] INFO [Controller id=0] New partition creation callback for output-vehicle-info-0 (kafka.controller.KafkaController)
[2023-03-05 16:58:21,217] DEBUG [Controller id=0] Delete topics listener fired for topics input-vehicle-info to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:58:21,217] INFO [Controller id=0] Starting topic deletion for topics input-vehicle-info (kafka.controller.KafkaController)
[2023-03-05 16:58:21,217] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:58:21,217] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info (re)started (kafka.controller.TopicDeletionManager)
[2023-03-05 16:58:21,324] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(input-vehicle-info-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-05 16:58:21,324] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=input-vehicle-info,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-05 16:58:21,324] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-info (kafka.controller.TopicDeletionManager)
[2023-03-05 16:58:21,446] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-info successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-05 16:58:21,448] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-05 16:58:21,448] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-05 16:58:21,497] INFO [Controller id=0] New topics: [Set(input-vehicle-info)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(input-vehicle-info,Some(1Qe9yZzvSeiqpuo3W2MPuA),Map(input-vehicle-info-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-05 16:58:21,497] INFO [Controller id=0] New partition creation callback for input-vehicle-info-0 (kafka.controller.KafkaController)
