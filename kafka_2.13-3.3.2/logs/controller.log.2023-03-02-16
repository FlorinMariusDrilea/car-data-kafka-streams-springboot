[2023-03-02 16:04:38,285] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-02 16:04:38,289] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-02 16:04:38,290] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-02 16:04:38,290] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-02 16:09:38,295] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-02 16:09:38,296] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-02 16:09:38,298] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-02 16:09:38,299] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-02 16:14:38,303] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-02 16:14:38,303] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-02 16:14:38,306] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-02 16:14:38,306] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-02 16:19:38,309] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-02 16:19:38,310] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-02 16:19:38,311] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-02 16:19:38,311] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-02 16:24:38,312] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-02 16:24:38,313] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-02 16:24:38,315] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-02 16:24:38,315] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-02 16:29:22,686] DEBUG [Controller id=0] Delete topics listener fired for topics input-vehicle-topic to be deleted (kafka.controller.KafkaController)
[2023-03-02 16:29:22,687] INFO [Controller id=0] Starting topic deletion for topics input-vehicle-topic (kafka.controller.KafkaController)
[2023-03-02 16:29:22,696] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-topic (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:22,702] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-topic (re)started (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:22,727] INFO [RequestSendThread controllerId=0] Controller 0 connected to 192.168.100.19:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-03-02 16:29:22,974] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(input-vehicle-topic-0 -> NONE, input-vehicle-topic-2 -> NONE, input-vehicle-topic-1 -> NONE) (kafka.controller.KafkaController)
[2023-03-02 16:29:22,981] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=input-vehicle-topic,Partition=0,Replica=0],[Topic=input-vehicle-topic,Partition=2,Replica=0],[Topic=input-vehicle-topic,Partition=1,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:22,982] INFO [Topic Deletion Manager 0] Handling deletion for topics input-vehicle-topic (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:23,267] INFO [Topic Deletion Manager 0] Deletion of topic input-vehicle-topic successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:23,270] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-02 16:29:23,271] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-02 16:29:31,428] DEBUG [Controller id=0] Delete topics listener fired for topics output-vehicle-topic to be deleted (kafka.controller.KafkaController)
[2023-03-02 16:29:31,428] INFO [Controller id=0] Starting topic deletion for topics output-vehicle-topic (kafka.controller.KafkaController)
[2023-03-02 16:29:31,428] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-topic (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:31,428] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-topic (re)started (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:31,614] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(output-vehicle-topic-2 -> NONE, output-vehicle-topic-1 -> NONE, output-vehicle-topic-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-02 16:29:31,614] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-vehicle-topic,Partition=2,Replica=0],[Topic=output-vehicle-topic,Partition=1,Replica=0],[Topic=output-vehicle-topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:31,615] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-topic (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:31,843] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-topic successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:31,844] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-02 16:29:31,844] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-02 16:29:32,033] INFO [Controller id=0] New topics: [Set(output-vehicle-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-vehicle-topic,Some(_ywhOcxcQMe99oXhq3Hr-Q),Map(output-vehicle-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-02 16:29:32,033] INFO [Controller id=0] New partition creation callback for output-vehicle-topic-0 (kafka.controller.KafkaController)
[2023-03-02 16:29:38,316] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-02 16:29:38,316] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-02 16:29:38,317] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-02 16:29:38,317] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-02 16:29:41,852] DEBUG [Controller id=0] Delete topics listener fired for topics output-vehicle-topic to be deleted (kafka.controller.KafkaController)
[2023-03-02 16:29:41,853] INFO [Controller id=0] Starting topic deletion for topics output-vehicle-topic (kafka.controller.KafkaController)
[2023-03-02 16:29:41,853] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-topic (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:41,853] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-topic (re)started (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:41,965] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(output-vehicle-topic-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-02 16:29:41,965] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-vehicle-topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:41,965] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-topic (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:42,097] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-topic successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-02 16:29:42,098] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-02 16:29:42,100] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-02 16:29:42,165] INFO [Controller id=0] New topics: [Set(output-vehicle-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-vehicle-topic,Some(IJjzP8f-QnyXuopWkS7x6Q),Map(output-vehicle-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-02 16:29:42,165] INFO [Controller id=0] New partition creation callback for output-vehicle-topic-0 (kafka.controller.KafkaController)
[2023-03-02 16:29:57,203] INFO [Controller id=0] New topics: [HashSet(input-vehicle-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(input-vehicle-topic,Some(8B-uG2lVSnS86zMY8pRkpw),Map(input-vehicle-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-02 16:29:57,204] INFO [Controller id=0] New partition creation callback for input-vehicle-topic-0 (kafka.controller.KafkaController)
[2023-03-02 16:30:09,582] DEBUG [Controller id=0] Delete topics listener fired for topics output-vehicle-topic to be deleted (kafka.controller.KafkaController)
[2023-03-02 16:30:09,582] INFO [Controller id=0] Starting topic deletion for topics output-vehicle-topic (kafka.controller.KafkaController)
[2023-03-02 16:30:09,582] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-topic (kafka.controller.TopicDeletionManager)
[2023-03-02 16:30:09,582] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-topic (re)started (kafka.controller.TopicDeletionManager)
[2023-03-02 16:30:09,690] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(output-vehicle-topic-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-02 16:30:09,690] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-vehicle-topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-02 16:30:09,690] INFO [Topic Deletion Manager 0] Handling deletion for topics output-vehicle-topic (kafka.controller.TopicDeletionManager)
[2023-03-02 16:30:09,811] INFO [Topic Deletion Manager 0] Deletion of topic output-vehicle-topic successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-02 16:30:09,812] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-02 16:30:09,813] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-02 16:30:09,883] INFO [Controller id=0] New topics: [HashSet(output-vehicle-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-vehicle-topic,Some(4oA1SwwbTGGEeESwMYoQFg),Map(output-vehicle-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-02 16:30:09,883] INFO [Controller id=0] New partition creation callback for output-vehicle-topic-0 (kafka.controller.KafkaController)
[2023-03-02 16:33:48,003] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-03-02 16:33:48,003] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-03-02 16:33:48,004] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-03-02 16:33:48,008] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),drvn-application-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),drvn-application-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),drvn-application-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),drvn-application-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),drvn-application-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),input-vehicle-topic-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),drvn-application-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),output-vehicle-topic-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-03-02 16:33:49,782] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-03-02 16:33:49,783] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-03-02 16:33:49,783] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-03-02 16:33:49,783] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-03-02 16:33:49,784] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-03-02 16:33:49,785] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-03-02 16:33:49,785] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-03-02 16:33:49,786] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-03-02 16:33:49,786] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-03-02 16:33:49,786] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-03-02 16:33:49,787] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
